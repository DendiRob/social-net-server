generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MimeTypes {
  type        String  @id @db.VarChar(100)
  fileType    String  @db.VarChar(20)
  description String? @db.VarChar(100)

  @@index([fileType])
  @@map("mimeTypes")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String?
  password     String
  refreshToken String?       @unique
  uuid         String        @unique
  deleted      Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userProfile  userProfile[]

  @@map("users")
}

model userProfile {
  id           Int                @id @default(autoincrement())
  userId       Int
  firstName    String?            @db.VarChar(255)
  secondName   String?            @db.VarChar(255)
  thirdName    String?            @db.VarChar(255)
  aboutMe      String?            @db.Text
  birthday     DateTime?          @db.Date
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  user         User               @relation(fields: [userId], references: [id])
  profileFiles userProfileFiles[]

  @@map("userProfile")
}

model userProfileFiles {
  id              Int         @id @default(autoincrement())
  userProfileId   Int
  isProfileAvatar Boolean?
  name            String      @db.VarChar(255)
  mimetype        String      @db.VarChar(255)
  size            Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  userProfile     userProfile @relation(fields: [userProfileId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("userProfileFiles")
}
